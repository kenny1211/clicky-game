{"version":3,"sources":["components/Navbar/Navbar.js","components/Jumbotron/Jumbotron.js","components/ImageCard/ImageCard.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","score","topScore","styles","jumbotron","backgroundImage","minHeight","display","alignItems","justifyContent","backgroundRepeat","backgroundPosition","instructions","fontSize","Jumbotron","style","card","height","width","alignContent","textAlign","position","boxShadow","borderRadius","border","margin","cursor","imageContainer","overflow","imageStyle","ImageCard","value","id","onClick","handleUserPick","alt","name","src","image","shuffle","array","i","length","j","Math","floor","random","_ref","App","state","images","pickedArray","_this","indexOf","handleScore","setState","concat","handleEndGame","handleShuffle","shuffledImages","newScore","_this2","this","components_Navbar_Navbar","components_Jumbotron_Jumbotron","map","components_ImageCard_ImageCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f32707ea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = (props) => (\r\n  <nav className=\"navbar navbar-expand-lg\">\r\n    <span className=\"navbar-brand mb-0 h1\">CLICKY GAME</span>\r\n\r\n    <span className=\"mx-auto\">Click An Image To Begin!</span>\r\n\r\n    <span className=\"mr-2\">Score: {props.score} | Top Score: {props.topScore} </span>\r\n\r\n  </nav>\r\n)\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst styles = {\r\n  jumbotron: {\r\n    backgroundImage: \"url(https://i.imgur.com/aEwNXVn.jpg)\",\r\n    minHeight: \"30vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\"\r\n  },\r\n  instructions: {\r\n    fontSize: \"large\"\r\n  }\r\n}\r\n\r\nconst Jumbotron = () => (\r\n  <div>\r\n    <div className=\"jumbotron jumbotron-fluid text-center\" style={styles.jumbotron}>\r\n    </div>\r\n    <p className=\"text-center my-0\">Click on an image to earn points, but don't click any more than once!</p>\r\n  </div>\r\n)\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  card: {\r\n    height: 175,\r\n    width: 175,\r\n    alignContent: \"center\",\r\n    textAlign: \"center\",\r\n    position: \"70%\",\r\n    boxShadow: \"0 3px 6px #999, 0 3px 6px #999\",\r\n    borderRadius: \"3px\",\r\n    border: \"5px solid #f1f1f1\",\r\n    margin: 10,\r\n    cursor: \"pointer\"\r\n  },\r\n  imageContainer: {\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 10\r\n  },\r\n  imageStyle: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    borderRadius: 10\r\n  }\r\n}\r\n\r\nconst ImageCard = (props) => {\r\n\r\n  return (\r\n  <div \r\n    style={styles.card} \r\n    value={props.id}\r\n    onClick={() => props.handleUserPick(props.id)}\r\n  >\r\n    <div style={styles.imageContainer}>\r\n      <img alt={props.name} src={props.image} style={styles.imageStyle} />\r\n    </div> \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ImageCard;","import React, { Component } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Jumbotron from './components/Jumbotron/Jumbotron';\nimport ImageCard from './components/ImageCard/ImageCard';\nimport images from './images.json';\n\n// function to shuffle array via Durstenfield\nconst shuffle = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n\nstate = {\n  images,\n  score: 0,\n  topScore: 0,\n  pickedArray: [],\n}\n// function to handle if an item has been picked or not\n// the method indexOf will return a value of -1 if a value in an array does not occur\n// we will have a picked array containing the items picked \n// so if the item chosen by the user equals -1 the user will continue to play\n// otherwise the game will reset\n\nhandleUserPick = (id) => {\n  if (this.state.pickedArray.indexOf(id) === -1) {\n    this.handleScore();\n    this.setState({pickedArray: this.state.pickedArray.concat(id)});\n  }\n  else {\n    this.handleEndGame();\n  }\n}\n\n// at the end of the game:\n//  the top score will be displayed\n// the score will be reset and the top score displayed\n// the array will be emptied\n// images will be shuffled\n\nhandleEndGame = () => {\n  this.setState({\n    score: 0,\n    topScore: this.state.topScore,\n    pickedArray: []\n  })\n  this.handleShuffle();\n}\n\n// function to shuffle array of images\nhandleShuffle = () => {\n  let shuffledImages = shuffle(images);\n  this.setState({images: shuffledImages});\n}\n\n// function to handle users' score\nhandleScore = () => {\n\n  const newScore = this.state.score + 1;\n  this.setState({\n    score: newScore\n  })\n\n  // change state of topScore if user surpasses it\n  if (newScore > this.state.topScore) {\n    this.setState({\n      topScore: newScore\n    })\n  }\n\n  // event to handle user victory\n  if (newScore === 12) {\n    // set instructions to say user wins\n  }\n  // shuffle to randomize images\n  this.handleShuffle();\n}\n\n\n\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} topScore={this.state.topScore} />\n        <Jumbotron />\n        <div className=\"row\">\n          {this.state.images.map(image =>(\n            <div className=\"col\">\n              <ImageCard\n                key={image.id}\n                id={image.id}\n                image={image.image}\n                handleUserPick={this.handleUserPick}\n                handleScore={this.handleScore}\n                handleShuffle={this.handleShuffle}\n                />\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}